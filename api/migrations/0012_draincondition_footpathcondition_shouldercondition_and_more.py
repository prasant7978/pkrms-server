# Generated by Django 5.0.3 on 2025-02-07 11:16

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("api", "0011_user_phonenumber"),
    ]

    operations = [
        migrations.CreateModel(
            name="DrainCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("codeDescriptionEng", models.CharField(max_length=50)),
                ("codeDescriptionInd", models.CharField(max_length=50)),
                ("order", models.IntegerField()),
            ],
            options={
                "db_table": "DrainCondition",
            },
        ),
        migrations.CreateModel(
            name="FootPathCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("codeDescriptionEng", models.CharField(max_length=50)),
                ("codeDescriptionInd", models.CharField(max_length=50)),
                ("order", models.IntegerField()),
            ],
            options={
                "db_table": "FootPathCondition",
            },
        ),
        migrations.CreateModel(
            name="ShoulderCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("codeDescriptionEng", models.CharField(max_length=50)),
                ("codeDescriptionInd", models.CharField(max_length=50)),
                ("order", models.IntegerField()),
            ],
            options={
                "db_table": "ShoulderCondition",
            },
        ),
        migrations.CreateModel(
            name="SlopeCondition",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("code", models.CharField()),
                ("codeDescriptionEng", models.CharField(max_length=50)),
                ("codeDescriptionInd", models.CharField(max_length=50)),
                ("order", models.IntegerField()),
            ],
            options={
                "db_table": "SlopeCondition",
            },
        ),
        migrations.CreateModel(
            name="RoadCondition",
            fields=[
                (
                    "roadConditionId",
                    models.CharField(max_length=100, primary_key=True, serialize=False),
                ),
                ("analysisBaseYear", models.BooleanField(default=False, null=True)),
                ("barrierL", models.IntegerField(blank=True, null=True)),
                ("barrierR", models.IntegerField(blank=True, null=True)),
                ("bleedingArea", models.FloatField(blank=True, null=True)),
                ("chainageFrom", models.IntegerField()),
                ("chainageTo", models.IntegerField()),
                ("checkData", models.BooleanField(default=False)),
                ("composition", models.FloatField(blank=True, null=True)),
                ("concreteBlowoutsArea", models.FloatField(blank=True, null=True)),
                ("concreteCornerBreakNo", models.IntegerField(blank=True, null=True)),
                (
                    "concreteCrackingArea",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("concretePumpingNo", models.IntegerField(blank=True, null=True)),
                (
                    "concreteSpallingArea",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                (
                    "concreteStructuralCrackingArea",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("crackDepArea", models.FloatField(blank=True, null=True)),
                ("crackType", models.FloatField(blank=True, null=True)),
                ("crackWidth", models.IntegerField(blank=True, null=True)),
                ("crossfallArea", models.FloatField(blank=True, null=True)),
                (
                    "crossfallShape",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("desintegrationArea", models.FloatField(blank=True, null=True)),
                (
                    "distribution",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("gravelSize", models.CharField(blank=True, max_length=50, null=True)),
                (
                    "gravelThickness",
                    models.CharField(blank=True, max_length=50, null=True),
                ),
                ("gravelThicknessArea", models.FloatField(blank=True, null=True)),
                ("guidepostL", models.IntegerField(blank=True, null=True)),
                ("guidepostR", models.IntegerField(blank=True, null=True)),
                ("iri", models.CharField(blank=True, max_length=50, null=True)),
                ("offsetFrom", models.IntegerField(blank=True, null=True)),
                ("offsetTo", models.IntegerField(blank=True, null=True)),
                ("othCrackArea", models.FloatField(blank=True, null=True)),
                ("paved", models.BooleanField(blank=True, null=True)),
                ("pavement", models.CharField(blank=True, max_length=100, null=True)),
                ("patchingArea", models.FloatField(blank=True, null=True)),
                ("potholeArea", models.FloatField(blank=True, null=True)),
                ("potholeCount", models.IntegerField(blank=True, null=True)),
                ("potholeSize", models.FloatField(blank=True, null=True)),
                ("rci", models.CharField(blank=True, max_length=50, null=True)),
                ("ravellingArea", models.FloatField(blank=True, null=True)),
                (
                    "roadMarkingL",
                    models.IntegerField(blank=True, default=False, null=True),
                ),
                (
                    "roadMarkingR",
                    models.IntegerField(blank=True, default=False, null=True),
                ),
                (
                    "roughness",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                ("ruttingArea", models.FloatField(blank=True, null=True)),
                ("ruttingDepth", models.IntegerField(blank=True, null=True)),
                ("sectionStatus", models.FloatField(blank=True, null=True)),
                ("segmentTti", models.CharField(blank=True, max_length=50, null=True)),
                ("signL", models.IntegerField(blank=True, null=True)),
                ("signR", models.IntegerField(blank=True, null=True)),
                ("surveyBy", models.CharField(blank=True, max_length=50, null=True)),
                ("surveyBy2", models.CharField(blank=True, max_length=50, null=True)),
                ("surveyDate", models.DateTimeField()),
                ("wavinessArea", models.FloatField(blank=True, null=True)),
                ("year", models.IntegerField()),
                (
                    "drainL",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_left",
                        to="api.draincondition",
                    ),
                ),
                (
                    "drainR",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_right",
                        to="api.draincondition",
                    ),
                ),
                (
                    "footpathL",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_footpath_left",
                        to="api.footpathcondition",
                    ),
                ),
                (
                    "footpathR",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_footpath_right",
                        to="api.footpathcondition",
                    ),
                ),
                (
                    "linkId",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_conditions",
                        to="api.link",
                    ),
                ),
                (
                    "shoulderL",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_shoulder_left",
                        to="api.shouldercondition",
                    ),
                ),
                (
                    "shoulderR",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_shoulder_right",
                        to="api.shouldercondition",
                    ),
                ),
                (
                    "slopeL",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_slope_left",
                        to="api.slopecondition",
                    ),
                ),
                (
                    "slopeR",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="road_condition_slope_right",
                        to="api.slopecondition",
                    ),
                ),
            ],
            options={
                "db_table": "RoadCondition",
            },
        ),
    ]
